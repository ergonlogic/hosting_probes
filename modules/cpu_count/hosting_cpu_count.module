<?php

/**
 * Implements hook_server_probe_commands().
 */
function hosting_cpu_count_server_probe_commands() {
  $commands = array(
    'user_count' => array(
      '#command' => 'nproc',
      '#callback' => 'hosting_cpu_count_nproc',
    ),
  );
  return $commands;
}

/**
 * Callback to record results of 'nproc' command.
 */
function hosting_cpu_count_nproc($nid, $server, $output) {
  hosting_cpu_count_save_cpu_count($nid, $output[0]);
}

/**
 * Save the number of CPUs for a server.
 */
function hosting_cpu_count_save_cpu_count($nid, $cpus) {
  if (FALSE === db_query("SELECT cpu_count FROM {hosting_cpu_count} WHERE nid = :nid", array(':nid' => $nid))->fetchField()) {
    db_insert('hosting_cpu_count')->fields(array(
      'nid' => $nid,
      'cpu_count' => $cpus,
    ))
    ->execute();
  }
  else {
    db_update('hosting_cpu_count')
      ->fields(array(
        'cpu_count' => $cpus,
      ))
      ->condition('nid', $nid)
      ->execute();
  }
}

/**
 * Implements hook_node_load().
 */
function hosting_cpu_count_node_load($nodes, $types) {
  foreach ($nodes as $nid => &$node) {
    if ($node->type == 'server') {
      $cpu_count = db_query("SELECT cpu_count FROM {hosting_cpu_count} WHERE nid = :nid", array(':nid' => $nid))->fetchField();
      $node->cpu_count = $cpu_count;
    }
  }
}

/**
 * Implements hook_node_view().
 */
function hosting_cpu_count_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'server') {
    $node->content['info']['cpu_count'] = array(
      '#type' => 'item',
      '#title' => t('CPU count'),
      '#markup' => check_plain($node->cpu_count),
    );
  }
}

/**
 * Implements hook_node_delete().
 */
function hosting_cpu_count_node_delete($node) {
  db_delete('hosting_cpu_count')
    ->condition('nid', $node->nid)
    ->execute();
}
